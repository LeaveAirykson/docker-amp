#!/bin/bash
set -e

damp_rootdir="$(dirname "$(readlink -f "$0")")"
cmd="$1"
colsep="%"
def_php="8.3"

c_yellow="\033[0;33m"
c_cyan="\033[0;36m"
c_green="\033[0;32m"
c_reset="\033[0m"
c_red="\033[0;31m"

function setup {
    _f_step "Create folder structure"
    mkdir -vp "$damp_rootdir/vhost"
    mkdir -vp "$damp_rootdir/www"
    mkdir -vp "$damp_rootdir/mysql"

    _f_step "Remove git repository"
    rm -rf "$damp_rootdir/.git"
    rm -rf ".vscode"
    rm .gitignore

    _f_step "Build container"
    cd "$damp_rootdir" && docker compose build

    echo -e "${c_green}Damp setup finished!${c_reset}\n"
}

function _f_head {
    echo -e "\n${c_yellow}$1${c_reset}"
}

function _f_step {
    echo -e "${c_cyan}$1${c_reset}"
}

function _f_success {
    echo -e "${c_green}$1${c_reset}"
}

function _f_error {
    echo -e "${c_red}$1${c_reset}"
}

function addvhost {
    projectname="$1"

    _f_head "Add project to damp"

    # ask for project name if not given
    while [[ $projectname == "" ]]; do
        read -rep "Folder name: " projectname
    done

    # create folder if it does not exist yet
    if ! [[ -d "$damp_rootdir/vhost" ]]; then
        mkdir -p "$damp_rootdir/vhost"
    fi

    # sanitize name and define paths to config and project dir
    projectname=${projectname,,}
    projectname=${projectname//[^[:alnum:]]/_}
    project_conf="$damp_rootdir/vhost/$projectname.conf"
    project_dir="$damp_rootdir/www/$projectname"

    # check if name is already used
    if [ -f "$project_conf" ]; then
        _f_error "A project with the given name already exists!"
        exit 0
    fi

    # ask for server name
    read -rep "ServerName ($projectname.geg): " domain
    domain=${domain:="$projectname.geg"}

    # ask for document root
    read -rep "DocumentRoot (relative path): " docroot

    # sanitize docroot value
    if [[ -n "$docroot" ]] && [[ $docroot != /* ]]; then
        docroot="/$docroot"
    fi

    project_docroot="$project_dir$docroot"

    # ask for php version
    read -rep "PHP version (${def_php}): " phpversion
    project_php=${phpversion:-$def_php}

    # show summary
    _f_head "Summary:"
    content="Project:${colsep}$projectname${colsep}"
    content+="\nServerName:${colsep}$domain${colsep}"
    content+="\nDocumentRoot:${colsep}$project_docroot${colsep}"
    content+="\nPHP:${colsep}$project_php${colsep}"

    echo -e "$content" | column -t -s "$colsep"

    echo ""

    # ask user consent
    while [[ -z "$consent" ]]; do
        read -rep "Proceed? (y/n): " consent
    done

    consent=${consent,,}

    if [[ "$consent" != "y" ]]; then
        echo -e "Canceled by user..."
        exit 0
    fi

    _f_step "Creating vhost config"

    vhost_docroot="/var/www/$projectname$docroot"
    vhost_content=$(cat "$damp_rootdir/apache/vhost.def.conf")
    vhost_content=${vhost_content//"%DAMP_DOCROOT%"/"$vhost_docroot"}
    vhost_content=${vhost_content//"%DAMP_SERVERNAME%"/"$domain"}
    vhost_content=${vhost_content//"%DAMP_PHP%"/"$project_php"}
    vhost_content=${vhost_content//"%DAMP_PROJECTNAME%"/"$projectname"}

    echo "$vhost_content" >"$project_conf"

    # if folder does not exist yet
    # create it and add dummy files
    if ! [[ -d "$project_dir" ]]; then
        mkdir -p "$project_dir"
        echo "<html><body>$projectname index.html</body></html>" >"$project_dir/index.html"
        echo "<?php phpinfo(); ?>" >"$project_dir/info.php"
    fi

    cd "$damp_rootdir" && docker compose restart apache

    _f_success "$projectname successfully added!"
}

function removevhost {
    projectname="$1"

    _f_head "Remove project from damp"

    # ask for project name if not given
    while [[ $projectname == "" ]]; do
        read -rep "Folder name: " projectname
    done

    # sanitize name and define paths to config and project dir
    projectname=${projectname,,}
    projectname=${projectname//[^[:alnum:]]/_}
    project_conf="$damp_rootdir/vhost/$projectname.conf"

    if ! [[ -f "$project_conf" ]]; then
        _f_error "$projectname could not be found!"
        exit 1
    fi

    # remove associated files
    _f_step "Removing vhost config"
    echo "config: $project_conf"
    rm "$project_conf"

    cd "$damp_rootdir" && docker compose restart apache

    _f_success "$projectname successfully removed!"
}

function help {
    echo -e "Docker AMP"
    echo -e "A docker solution with an Apache, MySQL, PhpMyAdmin stack\n"
    echo -e "USAGE: damp <command> [arguments]"

    echo -e "\nCommands"
    content="\nsetup${colsep}Starts damp setup${colsep}"
    content+="\nproject add [name]${colsep}Add new project${colsep}"
    content+="\nproject remove [name]${colsep}Remove project${colsep}"
    content+="\nconnect [name]${colsep}ssh connect to container with [name]${colsep}"

    echo -e "$content" | column -t -s "$colsep"
}

function connect {
    if [[ -z "$1" ]]; then
        echo "No container name provided!"
        exit 1
    fi

    cd "$damp_rootdir"
    docker exec -it "damp_$1" /bin/bash
}

case "$cmd" in
setup) setup ;;
connect | c) connect "$2" ;;
project)
    case "$2" in
    add) addvhost "$3" ;;
    remove) removevhost "$3" ;;
    *) list ;;
    esac
    ;;
'') help ;;
*) cd "$damp_rootdir" && docker compose "$@" ;;
esac
